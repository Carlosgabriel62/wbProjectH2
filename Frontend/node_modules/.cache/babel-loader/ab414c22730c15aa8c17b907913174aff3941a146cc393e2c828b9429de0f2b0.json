{"ast":null,"code":"import React,{useState}from\"react\";import\"./login.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function Login(){const[formData,setFormData]=useState({email:\"\",senha:\"\"});const[mensagem,setMensagem]=useState(\"\");// Para exibir a mensagem de sucesso ou erro\nconst handleChange=event=>{setFormData({...formData,[event.target.name]:event.target.value});};const handleSubmit=async event=>{event.preventDefault();try{const response=await fetch(`https://spidery-fishsticks-4j649wvv79hwwq-8080.app.github.dev/api/usuarios?email=${formData.email}&senha=${formData.senha}`,// Passando email e senha na query string\n{method:\"GET\",// Usando GET para validar as credenciais\nheaders:{\"Content-Type\":\"application/json\"}});if(response.ok){const data=await response.json();if(data&&data.length>0){setMensagem(\"Login com sucesso\");}else{setMensagem(\"Login incorreto\");}}else{setMensagem(\"Erro ao tentar fazer login\");}}catch(error){setMensagem(\"Erro na requisição: \"+error.message);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Email:\",/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Senha:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"senha\",value:formData.senha,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]}),/*#__PURE__*/_jsx(\"div\",{children:mensagem})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Login","formData","setFormData","email","senha","mensagem","setMensagem","handleChange","event","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","ok","data","json","length","error","message","children","onSubmit","type","onChange","required"],"sources":["/workspaces/wbProjectH2/Frontend/src/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./login.css\";\n\nexport function Login() {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    senha: \"\",\n  });\n  const [mensagem, setMensagem] = useState(\"\"); // Para exibir a mensagem de sucesso ou erro\n\n  const handleChange = (event) => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const response = await fetch(\n        `https://spidery-fishsticks-4j649wvv79hwwq-8080.app.github.dev/api/usuarios?email=${formData.email}&senha=${formData.senha}`, // Passando email e senha na query string\n        {\n          method: \"GET\", // Usando GET para validar as credenciais\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data && data.length > 0) {\n          setMensagem(\"Login com sucesso\");\n        } else {\n          setMensagem(\"Login incorreto\");\n        }\n      } else {\n        setMensagem(\"Erro ao tentar fazer login\");\n      }\n    } catch (error) {\n      setMensagem(\"Erro na requisição: \" + error.message);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Email:\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <label>\n          Senha:\n          <input\n            type=\"password\"\n            name=\"senha\"\n            value={formData.senha}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <button type=\"submit\">Login</button>\n      </form>\n\n      {/* Exibindo a mensagem de sucesso ou erro */}\n      <div>{mensagem}</div>\n    </div>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,MAAO,SAAS,CAAAC,KAAKA,CAAA,CAAG,CACtB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,CACvCQ,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EACT,CAAC,CAAC,CACF,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAAE;AAE9C,KAAM,CAAAY,YAAY,CAAIC,KAAK,EAAK,CAC9BN,WAAW,CAAC,CACV,GAAGD,QAAQ,CACX,CAACO,KAAK,CAACC,MAAM,CAACC,IAAI,EAAGF,KAAK,CAACC,MAAM,CAACE,KACpC,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAJ,KAAK,EAAK,CACpCA,KAAK,CAACK,cAAc,CAAC,CAAC,CAEtB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAC1B,oFAAoFd,QAAQ,CAACE,KAAK,UAAUF,QAAQ,CAACG,KAAK,EAAE,CAAE;AAC9H,CACEY,MAAM,CAAE,KAAK,CAAE;AACfC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CACF,CAAC,CAED,GAAIH,QAAQ,CAACI,EAAE,CAAE,CACf,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClC,GAAID,IAAI,EAAIA,IAAI,CAACE,MAAM,CAAG,CAAC,CAAE,CAC3Bf,WAAW,CAAC,mBAAmB,CAAC,CAClC,CAAC,IAAM,CACLA,WAAW,CAAC,iBAAiB,CAAC,CAChC,CACF,CAAC,IAAM,CACLA,WAAW,CAAC,4BAA4B,CAAC,CAC3C,CACF,CAAE,MAAOgB,KAAK,CAAE,CACdhB,WAAW,CAAC,sBAAsB,CAAGgB,KAAK,CAACC,OAAO,CAAC,CACrD,CACF,CAAC,CAED,mBACExB,KAAA,QAAAyB,QAAA,eACEzB,KAAA,SAAM0B,QAAQ,CAAEb,YAAa,CAAAY,QAAA,eAC3BzB,KAAA,UAAAyB,QAAA,EAAO,QAEL,cAAA3B,IAAA,UACE6B,IAAI,CAAC,OAAO,CACZhB,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEV,QAAQ,CAACE,KAAM,CACtBwB,QAAQ,CAAEpB,YAAa,CACvBqB,QAAQ,MACT,CAAC,EACG,CAAC,cACR7B,KAAA,UAAAyB,QAAA,EAAO,QAEL,cAAA3B,IAAA,UACE6B,IAAI,CAAC,UAAU,CACfhB,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEV,QAAQ,CAACG,KAAM,CACtBuB,QAAQ,CAAEpB,YAAa,CACvBqB,QAAQ,MACT,CAAC,EACG,CAAC,cACR/B,IAAA,WAAQ6B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,OAAK,CAAQ,CAAC,EAChC,CAAC,cAGP3B,IAAA,QAAA2B,QAAA,CAAMnB,QAAQ,CAAM,CAAC,EAClB,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}