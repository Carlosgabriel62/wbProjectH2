{"ast":null,"code":"import React,{useState}from\"react\";import\"./login.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function Login(){const[formData,setFormData]=useState({email:\"\",senha:\"\"});const[mensagem,setMensagem]=useState(\"\");// Para exibir a mensagem de sucesso ou erro\nconst handleChange=event=>{setFormData({...formData,[event.target.name]:event.target.value});};const handleSubmit=async event=>{event.preventDefault();try{// Fazendo a requisição para o login usando POST\nconst response=await fetch(\"/api/usuarios/login\",{method:\"POST\",// Usando POST para segurança\nheaders:{\"Content-Type\":\"application/json\"},body:JSON.stringify(formData)// Enviando o corpo com email e senha\n});if(response.ok){const data=await response.json();setMensagem(data);// Exibe a mensagem retornada pela API\n}else{setMensagem(\"Login incorreto: usuário ou senha inválidos\");}}catch(error){setMensagem(\"Erro na requisição: \"+error.message);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Email:\",/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Senha:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"senha\",value:formData.senha,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]}),/*#__PURE__*/_jsx(\"div\",{children:mensagem})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Login","formData","setFormData","email","senha","mensagem","setMensagem","handleChange","event","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","error","message","children","onSubmit","type","onChange","required"],"sources":["/workspaces/wbProjectH2/Frontend/src/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./login.css\";\n\nexport function Login() {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    senha: \"\",\n  });\n  const [mensagem, setMensagem] = useState(\"\"); // Para exibir a mensagem de sucesso ou erro\n\n  const handleChange = (event) => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      // Fazendo a requisição para o login usando POST\n      const response = await fetch(\"/api/usuarios/login\", {\n        method: \"POST\", // Usando POST para segurança\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData), // Enviando o corpo com email e senha\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setMensagem(data); // Exibe a mensagem retornada pela API\n      } else {\n        setMensagem(\"Login incorreto: usuário ou senha inválidos\");\n      }\n    } catch (error) {\n      setMensagem(\"Erro na requisição: \" + error.message);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Email:\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <label>\n          Senha:\n          <input\n            type=\"password\"\n            name=\"senha\"\n            value={formData.senha}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <button type=\"submit\">Login</button>\n      </form>\n\n      {/* Exibindo a mensagem de sucesso ou erro */}\n      <div>{mensagem}</div>\n    </div>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,MAAO,SAAS,CAAAC,KAAKA,CAAA,CAAG,CACtB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,CACvCQ,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EACT,CAAC,CAAC,CACF,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAAE;AAE9C,KAAM,CAAAY,YAAY,CAAIC,KAAK,EAAK,CAC9BN,WAAW,CAAC,CACV,GAAGD,QAAQ,CACX,CAACO,KAAK,CAACC,MAAM,CAACC,IAAI,EAAGF,KAAK,CAACC,MAAM,CAACE,KACpC,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAJ,KAAK,EAAK,CACpCA,KAAK,CAACK,cAAc,CAAC,CAAC,CAEtB,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,qBAAqB,CAAE,CAClDC,MAAM,CAAE,MAAM,CAAE;AAChBC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACnB,QAAQ,CAAG;AAClC,CAAC,CAAC,CAEF,GAAIa,QAAQ,CAACO,EAAE,CAAE,CACf,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClCjB,WAAW,CAACgB,IAAI,CAAC,CAAE;AACrB,CAAC,IAAM,CACLhB,WAAW,CAAC,6CAA6C,CAAC,CAC5D,CACF,CAAE,MAAOkB,KAAK,CAAE,CACdlB,WAAW,CAAC,sBAAsB,CAAGkB,KAAK,CAACC,OAAO,CAAC,CACrD,CACF,CAAC,CAED,mBACE1B,KAAA,QAAA2B,QAAA,eACE3B,KAAA,SAAM4B,QAAQ,CAAEf,YAAa,CAAAc,QAAA,eAC3B3B,KAAA,UAAA2B,QAAA,EAAO,QAEL,cAAA7B,IAAA,UACE+B,IAAI,CAAC,OAAO,CACZlB,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEV,QAAQ,CAACE,KAAM,CACtB0B,QAAQ,CAAEtB,YAAa,CACvBuB,QAAQ,MACT,CAAC,EACG,CAAC,cACR/B,KAAA,UAAA2B,QAAA,EAAO,QAEL,cAAA7B,IAAA,UACE+B,IAAI,CAAC,UAAU,CACflB,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEV,QAAQ,CAACG,KAAM,CACtByB,QAAQ,CAAEtB,YAAa,CACvBuB,QAAQ,MACT,CAAC,EACG,CAAC,cACRjC,IAAA,WAAQ+B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,OAAK,CAAQ,CAAC,EAChC,CAAC,cAGP7B,IAAA,QAAA6B,QAAA,CAAMrB,QAAQ,CAAM,CAAC,EAClB,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}