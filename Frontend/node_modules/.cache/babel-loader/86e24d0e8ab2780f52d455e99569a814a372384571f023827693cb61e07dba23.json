{"ast":null,"code":"var _jsxFileName = \"/workspaces/wbProjectH2/Frontend/src/Cadastro.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./cadastro.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Cadastro() {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    senha: \"\",\n    confirmaSenha: \"\"\n  });\n  const handleChange = event => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const usuario = {\n      email: formData.email,\n      senha: formData.senha,\n      nome: formData.nome // Adicione um campo para o nome se necessário\n    };\n    try {\n      const response = await fetch('/api/usuarios', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(usuario)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Usuário criado:', data);\n      } else {\n        console.error('Erro ao criar usuário:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro na requisição:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Senha:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"senha\",\n        value: formData.senha,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        name: \"confirmaSenha\",\n        value: formData.confirmaSenha,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Cadastrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Cadastro, \"qgxqNGzZUmpN8zy1HbMNUMPr0VI=\");\n_c = Cadastro;\nvar _c;\n$RefreshReg$(_c, \"Cadastro\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Cadastro","_s","formData","setFormData","email","senha","confirmaSenha","handleChange","event","target","name","value","handleSubmit","preventDefault","usuario","nome","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","error","statusText","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/wbProjectH2/Frontend/src/Cadastro.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./cadastro.css\";\n\nexport function Cadastro() {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    senha: \"\",\n    confirmaSenha: \"\",\n  });\n\n  const handleChange = (event) => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value,\n    });\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    const usuario = {\n      email: formData.email,\n      senha: formData.senha,\n      nome: formData.nome, // Adicione um campo para o nome se necessário\n    };\n  \n    try {\n      const response = await fetch('/api/usuarios', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(usuario),\n      });\n  \n      if (response.ok) {\n        const data = await response.json();\n        console.log('Usuário criado:', data);\n      } else {\n        console.error('Erro ao criar usuário:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro na requisição:', error);\n    }\n  };\n  \n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Email:\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Senha:\n        <input\n          type=\"password\"\n          name=\"senha\"\n          value={formData.senha}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Nome:\n        <input\n          type=\"name\"\n          name=\"confirmaSenha\"\n          value={formData.confirmaSenha}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\">Cadastrar</button>\n    </form>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}