{"ast":null,"code":"const handleSubmit = async event => {\n  event.preventDefault();\n  const usuario = {\n    email: formData.email,\n    senha: formData.senha,\n    nome: formData.nome\n  };\n  try {\n    const response = await fetch(\"/api/usuarios\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(usuario)\n    });\n    if (response.ok) {\n      const message = await response.text(); // Captura a mensagem de texto\n      console.log(\"Usuário criado:\", message);\n      alert(message); // Exibe a mensagem para o usuário\n    } else {\n      const errorMessage = await response.text(); // Captura a mensagem de erro\n      console.error(\"Erro ao criar usuário:\", errorMessage);\n      alert(errorMessage); // Exibe a mensagem de erro para o usuário\n    }\n  } catch (error) {\n    console.error(\"Erro na requisição:\", error);\n  }\n};","map":{"version":3,"names":["handleSubmit","event","preventDefault","usuario","email","formData","senha","nome","response","fetch","method","headers","body","JSON","stringify","ok","message","text","console","log","alert","errorMessage","error"],"sources":["/workspaces/wbProjectH2/Frontend/src/Cadastro.js"],"sourcesContent":["const handleSubmit = async (event) => {\n  event.preventDefault();\n\n  const usuario = {\n      email: formData.email,\n      senha: formData.senha,\n      nome: formData.nome,\n  };\n\n  try {\n      const response = await fetch(\"/api/usuarios\", {\n          method: \"POST\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(usuario),\n      });\n\n      if (response.ok) {\n          const message = await response.text(); // Captura a mensagem de texto\n          console.log(\"Usuário criado:\", message);\n          alert(message); // Exibe a mensagem para o usuário\n      } else {\n          const errorMessage = await response.text(); // Captura a mensagem de erro\n          console.error(\"Erro ao criar usuário:\", errorMessage);\n          alert(errorMessage); // Exibe a mensagem de erro para o usuário\n      }\n  } catch (error) {\n      console.error(\"Erro na requisição:\", error);\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,KAAK,IAAK;EACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;EAEtB,MAAMC,OAAO,GAAG;IACZC,KAAK,EAAEC,QAAQ,CAACD,KAAK;IACrBE,KAAK,EAAED,QAAQ,CAACC,KAAK;IACrBC,IAAI,EAAEF,QAAQ,CAACE;EACnB,CAAC;EAED,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,OAAO;IAChC,CAAC,CAAC;IAEF,IAAIK,QAAQ,CAACO,EAAE,EAAE;MACb,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;MACvCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,OAAO,CAAC;MACvCI,KAAK,CAACJ,OAAO,CAAC,CAAC,CAAC;IACpB,CAAC,MAAM;MACH,MAAMK,YAAY,GAAG,MAAMb,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5CC,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAED,YAAY,CAAC;MACrDD,KAAK,CAACC,YAAY,CAAC,CAAC,CAAC;IACzB;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC/C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}