{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import\"./login.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function Login(){const[formData,setFormData]=useState({email:\"\",senha:\"\"});const[mensagem,setMensagem]=useState(\"\");// Para exibir a mensagem de erro\nconst navigate=useNavigate();// Hook para redirecionar\nconst handleChange=event=>{setFormData({...formData,[event.target.name]:event.target.value});};const handleSubmit=async event=>{event.preventDefault();try{const response=await fetch(\"/api/usuarios/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(formData)});const data=await response.json();if(response.ok){localStorage.setItem(\"authToken\",data.token);// Salva o token\nsetMensagem(data.message);navigate(\"/gerenciador\");// Redireciona para gerenciador após login bem-sucedido\n}else{setMensagem(data.message);// Exibe a mensagem de erro\n}}catch(error){setMensagem(\"Erro na requisição: \"+error.message);// Erro de rede\n}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Email:\",/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Senha:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"senha\",value:formData.senha,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]}),/*#__PURE__*/_jsx(\"div\",{children:mensagem})]});}","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Login","formData","setFormData","email","senha","mensagem","setMensagem","navigate","handleChange","event","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","message","error","children","onSubmit","type","onChange","required"],"sources":["/workspaces/wbProjectH2/Frontend/src/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./login.css\";\n\nexport function Login() {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    senha: \"\",\n  });\n  const [mensagem, setMensagem] = useState(\"\"); // Para exibir a mensagem de erro\n  const navigate = useNavigate(); // Hook para redirecionar\n\n  const handleChange = (event) => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const response = await fetch(\"/api/usuarios/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem(\"authToken\", data.token); // Salva o token\n        setMensagem(data.message);\n        navigate(\"/gerenciador\"); // Redireciona para gerenciador após login bem-sucedido\n      } else {\n        setMensagem(data.message); // Exibe a mensagem de erro\n      }\n    } catch (error) {\n      setMensagem(\"Erro na requisição: \" + error.message); // Erro de rede\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Email:\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <label>\n          Senha:\n          <input\n            type=\"password\"\n            name=\"senha\"\n            value={formData.senha}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <button type=\"submit\">Login</button>\n      </form>\n\n      {/* Exibindo a mensagem de sucesso ou erro */}\n      <div>{mensagem}</div>\n    </div>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,MAAO,SAAS,CAAAC,KAAKA,CAAA,CAAG,CACtB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,CACvCS,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EACT,CAAC,CAAC,CACF,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC9C,KAAM,CAAAa,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAAE;AAEhC,KAAM,CAAAa,YAAY,CAAIC,KAAK,EAAK,CAC9BP,WAAW,CAAC,CACV,GAAGD,QAAQ,CACX,CAACQ,KAAK,CAACC,MAAM,CAACC,IAAI,EAAGF,KAAK,CAACC,MAAM,CAACE,KACpC,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAJ,KAAK,EAAK,CACpCA,KAAK,CAACK,cAAc,CAAC,CAAC,CAEtB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,qBAAqB,CAAE,CAClDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACpB,QAAQ,CAC/B,CAAC,CAAC,CAEF,KAAM,CAAAqB,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAElC,GAAIR,QAAQ,CAACS,EAAE,CAAE,CACfC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAEJ,IAAI,CAACK,KAAK,CAAC,CAAE;AAC/CrB,WAAW,CAACgB,IAAI,CAACM,OAAO,CAAC,CACzBrB,QAAQ,CAAC,cAAc,CAAC,CAAE;AAC5B,CAAC,IAAM,CACLD,WAAW,CAACgB,IAAI,CAACM,OAAO,CAAC,CAAE;AAC7B,CACF,CAAE,MAAOC,KAAK,CAAE,CACdvB,WAAW,CAAC,sBAAsB,CAAGuB,KAAK,CAACD,OAAO,CAAC,CAAE;AACvD,CACF,CAAC,CAED,mBACE7B,KAAA,QAAA+B,QAAA,eACE/B,KAAA,SAAMgC,QAAQ,CAAElB,YAAa,CAAAiB,QAAA,eAC3B/B,KAAA,UAAA+B,QAAA,EAAO,QAEL,cAAAjC,IAAA,UACEmC,IAAI,CAAC,OAAO,CACZrB,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEX,QAAQ,CAACE,KAAM,CACtB8B,QAAQ,CAAEzB,YAAa,CACvB0B,QAAQ,MACT,CAAC,EACG,CAAC,cACRnC,KAAA,UAAA+B,QAAA,EAAO,QAEL,cAAAjC,IAAA,UACEmC,IAAI,CAAC,UAAU,CACfrB,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEX,QAAQ,CAACG,KAAM,CACtB6B,QAAQ,CAAEzB,YAAa,CACvB0B,QAAQ,MACT,CAAC,EACG,CAAC,cACRrC,IAAA,WAAQmC,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,OAAK,CAAQ,CAAC,EAChC,CAAC,cAGPjC,IAAA,QAAAiC,QAAA,CAAMzB,QAAQ,CAAM,CAAC,EAClB,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}